{"version":3,"sources":["components/alert/Alert.module.css","components/contactList/ContactList.module.css","components/contactItem/ContactItem.module.css","components/logo/Logo.module.css","components/contactForm/ContactForm.module.css","components/App.module.css","components/contactForm/ContactForm.js","components/contactItem/ContactItem.js","components/contactList/ContactList.js","components/filter/Filter.js","contexts/ThemeContext.js","components/hoc/withTheme.js","components/logo/Logo.js","components/alert/Alert.js","components/App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","changeHandler","e","target","value","setState","handleSubmit","preventDefault","props","onSubmit","this","className","styles","contactForm","type","onChange","Component","ContactItem","contact","id","onRemoveContact","listItem","listItemP","listItemButton","onClick","itemMove","enter","enterActive","exit","exitActive","ContactList","contacts","TransitionGroup","component","map","CSSTransition","key","timeout","classNames","Filter","onChangeFilter","Context","createContext","themeConfig","light","headerBg","fontColor","bodybg","dark","ThemeContext","themeToggle","prevState","theme","themeCfg","Provider","children","Consumer","withTheme","WrappedComponent","ctx","toggle","logoStyles","appear","appearActive","Logo","in","unmountOnExit","alertAnim","Alert","title","alert","alertDanger","alertCustom","App","filter","addContact","uuid","find","showAlert","message","clearTimeout","alertTimeoutHandle","setTimeout","removeContact","changeFilter","getFilteredContacts","toLowerCase","includes","storedContacts","JSON","parse","localStorage","getItem","length","prevProps","setItem","stringify","style","color","background","sectionTitle","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.198f844f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"Alert_appear__1_bj8\",\"appearActive\":\"Alert_appearActive__1_Y8e\",\"exit\":\"Alert_exit__SiLww\",\"exitActive\":\"Alert_exitActive__2Ntqy\",\"alertCustom\":\"Alert_alertCustom__1bDEO\",\"alert\":\"Alert_alert__3ztsv\",\"alertDanger\":\"Alert_alertDanger__3PLoV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"ContactList_enter__3OpC8\",\"enterActive\":\"ContactList_enterActive__21IqL\",\"exit\":\"ContactList_exit__1zefS\",\"exitActive\":\"ContactList_exitActive__gE26U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactItem_listItem__1OCgh\",\"listItemP\":\"ContactItem_listItemP__2mt1h\",\"listItemButton\":\"ContactItem_listItemButton__17emd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Logo_logo__1t72p\",\"appear\":\"Logo_appear__3CCvf\",\"appearActive\":\"Logo_appearActive__1P4WV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__AhZAe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionTitle\":\"App_sectionTitle__3x4fn\",\"light\":\"App_light__DPgyO\",\"dark\":\"App_dark__3geCe\"};","import React, { Component } from 'react';\r\nimport styles from './ContactForm.module.css';\r\n\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  changeHandler = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n\r\n    this.props.onSubmit(name, number);\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={styles.contactForm} onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name\r\n          <br />\r\n          <input\r\n            name=\"name\"\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={this.changeHandler}\r\n          />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Number\r\n          <br />\r\n          <input\r\n            name=\"number\"\r\n            type=\"text\"\r\n            value={number}\r\n            onChange={this.changeHandler}\r\n          />\r\n        </label>\r\n        <br />\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport styles from './ContactItem.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactItem = ({ contact: { id, name, number }, onRemoveContact }) => {\r\n  return (\r\n    <li className={styles.listItem}>\r\n      <p className={styles.listItemP}>\r\n        {name}: {number}\r\n      </p>\r\n      <button\r\n        className={styles.listItemButton}\r\n        onClick={() => onRemoveContact(id)}\r\n        type=\"button\"\r\n      >\r\n        Удалить\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactItem.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactItem;\r\n","import React from 'react';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport styles from './ContactList.module.css';\r\nimport ContactItem from '../contactItem/ContactItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst itemMove = {\r\n  enter: styles.enter,\r\n  enterActive: styles.enterActive,\r\n  exit: styles.exit,\r\n  exitActive: styles.exitActive,\r\n};\r\n\r\nconst ContactList = ({ contacts, onRemoveContact }) => {\r\n  return (\r\n    <TransitionGroup component=\"ul\">\r\n      {contacts &&\r\n        contacts.map(contact => (\r\n          <CSSTransition key={contact.id} timeout={250} classNames={itemMove}>\r\n            <ContactItem contact={contact} onRemoveContact={onRemoveContact} />\r\n          </CSSTransition>\r\n        ))}\r\n    </TransitionGroup>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ value, onChangeFilter }) => {\r\n  return (\r\n    <form>\r\n      <label>\r\n        Find contacts by name\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={e => onChangeFilter(e.target.value)}\r\n        ></input>\r\n      </label>\r\n    </form>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component, createContext } from 'react';\r\n\r\nconst Context = createContext();\r\n\r\nconst themeConfig = {\r\n  light: {\r\n    headerBg: '#F7B30C',\r\n    fontColor: 'black',\r\n    bodybg: 'white',\r\n  },\r\n  dark: {\r\n    headerBg: '#3c3c3c',\r\n    fontColor: 'white',\r\n    bodybg: 'black',\r\n  },\r\n};\r\n\r\nexport default class ThemeContext extends Component {\r\n  static Consumer = Context.Consumer;\r\n\r\n  themeToggle = () => {\r\n    this.setState(prevState => {\r\n      if (prevState.theme === 'light') {\r\n        return { theme: 'dark', themeCfg: themeConfig.dark };\r\n      } else {\r\n        return { theme: 'light', themeCfg: themeConfig.light };\r\n      }\r\n    });\r\n  };\r\n\r\n  state = {\r\n    theme: 'light',\r\n    themeCfg: themeConfig.light,\r\n    themeToggle: this.themeToggle,\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ThemeContext from '../../contexts/ThemeContext';\r\n\r\nconst withTheme = WrappedComponent => {\r\n  return function withTheme(props) {\r\n    return (\r\n      <ThemeContext.Consumer>\r\n        {ctx => (\r\n          <WrappedComponent\r\n            {...props}\r\n            themeCfg={ctx.themeCfg}\r\n            theme={ctx.theme}\r\n            toggle={ctx.themeToggle}\r\n          />\r\n        )}\r\n      </ThemeContext.Consumer>\r\n    );\r\n  };\r\n};\r\n\r\nexport default withTheme;\r\n","import React from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport styles from './Logo.module.css';\r\n\r\nconst logoStyles = {\r\n  appear: styles.appear,\r\n  appearActive: styles.appearActive,\r\n};\r\n\r\nexport const Logo = () => {\r\n  return (\r\n    <CSSTransition\r\n      in={true}\r\n      appear={true}\r\n      timeout={500}\r\n      classNames={logoStyles}\r\n      unmountOnExit\r\n    >\r\n      <h1>Phonebook</h1>\r\n    </CSSTransition>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport styles from './Alert.module.css';\r\n\r\nconst alertAnim = {\r\n  appear: styles.appear,\r\n  appearActive: styles.appearActive,\r\n  exit: styles.exit,\r\n  exitActive: styles.exitActive,\r\n};\r\n\r\nconst Alert = ({ title }) => (\r\n  <CSSTransition\r\n    in={true}\r\n    appear={true}\r\n    timeout={250}\r\n    classNames={alertAnim}\r\n    unmountOnExit\r\n  >\r\n    <div className={(styles.alert, styles.alertDanger, styles.alertCustom)}>\r\n      {title}\r\n    </div>\r\n  </CSSTransition>\r\n);\r\n\r\nexport default Alert;\r\n","import React, { Component } from 'react';\r\nimport ContactForm from './contactForm/ContactForm';\r\nimport { v4 as uuid } from 'uuid';\r\nimport styles from './App.module.css';\r\nimport ContactList from './contactList/ContactList';\r\nimport Filter from './filter/Filter';\r\nimport withTheme from './hoc/withTheme';\r\nimport { Logo } from './logo/Logo';\r\nimport Alert from './alert/Alert';\r\n\r\nclass App extends Component {\r\n  static alertTimeoutHandle = 0;\r\n\r\n  state = {\r\n    contacts: [],\r\n    filter: '',\r\n    alert: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    const storedContacts = JSON.parse(localStorage.getItem('contacts'));\r\n    storedContacts &&\r\n      storedContacts.length > 0 &&\r\n      this.setState({ contacts: storedContacts });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    prevState.contacts !== this.state.contacts &&\r\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n  }\r\n\r\n  addContact = (name, number) => {\r\n    const { contacts } = this.state;\r\n\r\n    const contact = {\r\n      id: uuid(),\r\n      name: name,\r\n      number: number,\r\n    };\r\n\r\n    if (contacts && contacts.find(contact => name === contact.name)) {\r\n      this.showAlert(`${contact.name} already exists`);\r\n    } else {\r\n      this.setState(prevState => {\r\n        return {\r\n          contacts: [...prevState.contacts, contact],\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  showAlert = message => {\r\n    this.setState({ alert: message });\r\n    clearTimeout(this.alertTimeoutHandle);\r\n    this.alertTimeoutHandle = setTimeout(() => {\r\n      this.setState({ alert: '' });\r\n    }, 3000);\r\n  };\r\n\r\n  removeContact = id => {\r\n    this.setState(prevState => {\r\n      return {\r\n        contacts: prevState.contacts.filter(contact => contact.id !== id),\r\n      };\r\n    });\r\n  };\r\n\r\n  changeFilter = filter => {\r\n    this.setState({ filter });\r\n  };\r\n\r\n  getFilteredContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { contacts, filter, alert } = this.state;\r\n    const { themeCfg } = this.props;\r\n    return (\r\n      <>\r\n        <div style={{ color: themeCfg.fontColor, background: themeCfg.bodybg }}>\r\n          <button onClick={this.props.toggle}>Change theme</button>\r\n          <Logo />\r\n          {alert && <Alert title={alert} />}\r\n          <ContactForm onSubmit={this.addContact} />\r\n\r\n          <h2 className={styles.sectionTitle}>Contacts</h2>\r\n          {contacts.length > 1 && (\r\n            <Filter value={filter} onChangeFilter={this.changeFilter} />\r\n          )}\r\n          <ContactList\r\n            onRemoveContact={this.removeContact}\r\n            contacts={this.getFilteredContacts()}\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTheme(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport ThemeContext from './contexts/ThemeContext';\r\n\r\nReactDOM.render(\r\n  <ThemeContext>\r\n    <App />\r\n  </ThemeContext>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}